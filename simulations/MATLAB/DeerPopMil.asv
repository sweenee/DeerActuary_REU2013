function [ X ] = DeerPopMil( T, N, r1, h, F, alpha )
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here

rtilde=r1-h;
ftilde=(rtilde/r1)*F;
a=(alpha^2)-rtilde;      

b=(.5*(alpha^2))-a;

g0= 1-(rtilde/b);

dt=sqrt(T/N);
dW = dt*randn(1, N+1);
W = [0, cumsum(dW(1:N))]; 

x0 = ftilde;


ds=T/N;
s=(0:ds:T);

Q = cumsum(exp(b*s+alpha*W).*dW);   %integral part of analytic solution
Z = (rtilde/b) + g0*exp((-b*s)-(alpha*W)) + exp((-b*s)-(alpha*W)).*((-alpha*rtilde)/b).*Q; %analytic solution of Z
X = (ftilde./Z); % transform back to X


%Milstein Approximation
L = N;
Xmil = zeros(1, L+1);
Xmil(1) = x0;
Xtemp = x0;

for i=1:L
    Winc = dW(i);
    Xtemp = Xtemp + dt*rtilde*Xtemp*(1-Xtemp/ftilde) + alpha*Xtemp*Winc + .5*alpha*alpha*Xtemp*(Winc*Winc-dt);
    Xmil(1, i+1) = Xtemp;
end

plot(s, X, 'g-', s, Xmil, 'rx');
legend('Xtrue','Xmil')